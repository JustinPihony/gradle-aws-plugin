// -*- coding: utf-8; mode: groovy -*-

import com.amazonaws.services.s3.model.ObjectMetadata

import jp.classmethod.aws.gradle.s3.CreateBucketTask
import jp.classmethod.aws.gradle.s3.DeleteBucketTask
import jp.classmethod.aws.gradle.s3.SyncTask

buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath "jp.classmethod.aws:gradle-aws-plugin:0.37-2-+"
	}
}

apply plugin: "jp.classmethod.aws.s3"
aws {
	profileName = "default"
	region = "ap-northeast-1"
}

def myBucketName = 'gradle-aws-plugin-sample' // change this

task createBucket(type: CreateBucketTask) {
	bucketName = myBucketName
	ifNotExists = true
}

task deleteBucket(type: DeleteBucketTask) {
	bucketName = myBucketName
	ifExists = true
	deleteObjects = true
}

task syncContents(type: SyncTask, dependsOn: createBucket) {
	source = file("contents") // must be directory
	bucketName = myBucketName
	prefix "02-s3-sync-contents/"
	
	// to set all file's metadata "no-cache, no-store"
	metadataProvider { bucket, key, file ->
		ObjectMetadata m = new ObjectMetadata()
		m.setCacheControl("no-cache, no-store")
		return m
	}
}
